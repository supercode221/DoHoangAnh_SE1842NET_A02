@page
@model DoHoangAnh_SE1842NET_A01_FE.Pages.News.DetailModel
@{
	ViewData["Title"] = "News Detail";
}

<div class="max-w-7xl mx-auto px-6 py-12">

    <!-- Back Button -->
    <a href="/Index" class="inline-flex items-center text-black hover:text-pink-200 transition-colors duration-300 mb-8">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to News
    </a>

    <!-- Loading Spinner -->
    <div id="loading" class="flex justify-center items-center py-20">
        <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-white"></div>
    </div>

    <!-- Error Message -->
    <div id="error" class="hidden bg-red-500/20 backdrop-blur-lg border border-red-500/50 rounded-lg p-6 text-black text-center">
        <h3 class="text-xl font-semibold mb-2">Failed to Load Article</h3>
        <p id="errorMessage" class="text-black/80"></p>
    </div>

    <div id="mainContent" class="hidden">
        <!-- Article Content -->
        <article id="articleContent" class="bg-white/10 backdrop-blur-lg border border-white/20 rounded-xl p-8 shadow-2xl mb-12">
            <!-- Category Badge -->
            <span id="category" class="inline-block px-4 py-2 bg-purple-500 rounded-full text-white text-sm font-semibold mb-4"></span>

            <!-- Title -->
            <h1 id="title" class="text-4xl md:text-5xl font-bold text-black mb-4"></h1>

            <!-- Headline -->
            <p id="headline" class="text-xl text-black/90 mb-6"></p>

            <!-- Meta Info -->
            <div class="flex flex-wrap items-center gap-4 text-black/70 text-sm pb-6 border-b border-white/20">
                <div class="flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    <span id="date"></span>
                </div>
                <div id="sourceContainer" class="hidden flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                    </svg>
                    <span id="source"></span>
                </div>
                <div id="authorContainer" class="hidden flex items-center gap-2">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    <span id="author"></span>
                </div>
            </div>

            <!-- Tags -->
            <div id="tagsContainer" class="hidden mb-6 flex gap-2">
                <h3 class="text-black font-semibold mb-3">Tags:</h3>
                <div id="tags" class="flex flex-wrap gap-2"></div>
            </div>

            <!-- Content -->
            <div id="content" class="text-black/90 leading-relaxed space-y-4 text-lg"></div>
        </article>

        <!-- Related Articles Section -->
        <section id="relatedSection" class="hidden">
            <h2 class="text-3xl font-bold text-black mb-6">Related Articles</h2>
            <div id="relatedArticles" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Related articles will be inserted here -->
            </div>
        </section>
    </div>

</div>

@section Scripts {
    <script>
        // Get articleId from URL
        const urlParams = new URLSearchParams(window.location.search);
        const articleId = urlParams.get('articleId');

        // Fetch article detail with related articles
        async function fetchArticleDetail() {
            const loading = document.getElementById('loading');
            const error = document.getElementById('error');
            const mainContent = document.getElementById('mainContent');

            if (!articleId) {
                loading.classList.add('hidden');
                error.classList.remove('hidden');
                document.getElementById('errorMessage').textContent = 'Article ID not provided';
                return;
            }

            try {
                const response = await fetch(`https://localhost:7000/api/news/detailWithRelated/${articleId}`);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const result = await response.json();

                if (result.statusCode === 200 && result.data) {
                    displayArticle(result.data);

                    // Display related articles if available
                    if (result.data.related && result.data.related.length > 0) {
                        displayRelatedArticles(result.data.related);
                    }

                    loading.classList.add('hidden');
                    mainContent.classList.remove('hidden');
                } else {
                    throw new Error('Article not found');
                }

            } catch (err) {
                console.error('Error fetching article:', err);
                loading.classList.add('hidden');
                error.classList.remove('hidden');
                document.getElementById('errorMessage').textContent = err.message;
            }
        }

        // Display article
        function displayArticle(article) {
            // Category
            document.getElementById('category').textContent = article.categoryName;

            // Title and Headline
            document.getElementById('title').textContent = article.newsTitle;
            document.getElementById('headline').textContent = article.headline;

            // Date
            const date = new Date(article.createdDate);
            document.getElementById('date').textContent = date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });

            // Source
            if (article.newsSource && article.newsSource !== 'N/A') {
                document.getElementById('sourceContainer').classList.remove('hidden');
                document.getElementById('source').textContent = article.newsSource;
            }

            // Author
            if (article.createdByName) {
                document.getElementById('authorContainer').classList.remove('hidden');
                document.getElementById('author').textContent = `By ${article.createdByName}`;
            }

            // Content - preserve line breaks
            const contentDiv = document.getElementById('content');
            const paragraphs = article.newsContent.split('\r\n\r\n');
            contentDiv.innerHTML = paragraphs
                .filter(p => p.trim())
                .map(p => `<p>${p.trim()}</p>`)
                .join('');

            // Tags
            if (article.tags && article.tags.length > 0) {
                document.getElementById('tagsContainer').classList.remove('hidden');
                const tagsDiv = document.getElementById('tags');
                tagsDiv.innerHTML = article.tags
                    .map(tag => `
                        <span class="px-3 py-2 bg-gray-100 rounded-full text-black text-sm">
                            ${tag.tagName}
                        </span>
                    `)
                    .join('');
            }
        }

        // Display related articles
        function displayRelatedArticles(relatedArticles) {
            const relatedSection = document.getElementById('relatedSection');
            const relatedContainer = document.getElementById('relatedArticles');

            relatedSection.classList.remove('hidden');
            relatedContainer.innerHTML = '';

            relatedArticles.forEach(article => {
                const card = createRelatedCard(article);
                relatedContainer.appendChild(card);
            });
        }

        // Create related article card
        function createRelatedCard(article) {
            const card = document.createElement('div');
            card.className = 'bg-white/10 backdrop-blur-lg border border-white/20 rounded-xl overflow-hidden hover:transform hover:scale-105 transition-all duration-300 shadow-lg cursor-pointer';

            // Format date
            const date = new Date(article.createdDate);
            const formattedDate = date.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'short',
                day: 'numeric'
            });

            // Truncate content
            const truncatedContent = article.newsContent.length > 120
                ? article.newsContent.substring(0, 120) + '...'
                : article.newsContent;

            card.innerHTML = `
                <div class="p-6">
                    <!-- Category Badge -->
                    <span class="inline-block px-3 py-1 bg-purple-500 rounded-full text-white text-xs font-semibold mb-3">
                        ${article.categoryName}
                    </span>

                    <!-- Title -->
                    <h3 class="text-xl font-bold text-black mb-2 line-clamp-2">
                        ${article.newsTitle}
                    </h3>

                    <!-- Content Preview -->
                    <p class="text-black/70 text-sm mb-4 line-clamp-3">
                        ${truncatedContent}
                    </p>

                    <!-- Date -->
                    <div class="flex items-center text-black/60 text-xs mb-4">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span>${formattedDate}</span>
                    </div>

                    <!-- Read More Button -->
                    <button onclick="viewArticle('${article.newsArticleId}')" class="w-full bg-white text-purple-600 py-2 rounded-lg font-semibold hover:bg-pink-100 transition-all duration-300">
                        Read More
                    </button>
                </div>
            `;

            return card;
        }

        // Navigate to article detail
        function viewArticle(articleId) {
            window.location.href = `/News/Detail?articleId=${articleId}`;
        }

        // Load article when page loads
        document.addEventListener('DOMContentLoaded', fetchArticleDetail);
    </script>
}